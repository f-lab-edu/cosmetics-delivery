Subject: [PATCH] Uncommitted changes before Checkout at 5/14/24, 12:40 AM [Changes]
---
Index: module-domain/src/main/java/com/cosmetics/domain/member/repository/MemberRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/module-domain/src/main/java/com/cosmetics/domain/member/repository/MemberRepository.java b/module-domain/src/main/java/com/cosmetics/domain/member/repository/MemberRepository.java
--- a/module-domain/src/main/java/com/cosmetics/domain/member/repository/MemberRepository.java	
+++ b/module-domain/src/main/java/com/cosmetics/domain/member/repository/MemberRepository.java	
@@ -1,14 +1,14 @@
 package com.cosmetics.domain.member.repository;
 
-import com.cosmetics.domain.member.dto.MemberManagement;
 import com.cosmetics.domain.member.entity.MemberManagementEntity;
 import org.springframework.data.jpa.repository.JpaRepository;
 import org.springframework.stereotype.Repository;
 
+import java.util.Optional;
+
 @Repository
 public interface MemberRepository extends JpaRepository<MemberManagementEntity, Long> {
-
-    MemberManagementEntity findByMemberId(Long memberId);
+    Optional<MemberManagementEntity> findByMemberId(Long memberId);
 
     MemberManagementEntity save(MemberManagementEntity memberManagementEntity);
 
Index: module-api/src/test/java/com/cosmetics/goods/controller/GoodsControllerTest2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/module-api/src/test/java/com/cosmetics/goods/controller/GoodsControllerTest2.java b/module-api/src/test/java/com/cosmetics/goods/controller/GoodsControllerTest2.java
--- a/module-api/src/test/java/com/cosmetics/goods/controller/GoodsControllerTest2.java	
+++ b/module-api/src/test/java/com/cosmetics/goods/controller/GoodsControllerTest2.java	
@@ -3,7 +3,7 @@
 import com.cosmetics.api.goods.controller.GoodsController;
 import com.cosmetics.domain.exception.custom.CustomException;
 import com.cosmetics.domain.exception.error.GoodsErrorManagement;
-import com.cosmetics.domain.goods.dto.GoodsItemManagement;
+import com.cosmetics.domain.goods.dto.item.GoodsItemManagement;
 import com.cosmetics.domain.goods.dto.GoodsManagement;
 import com.cosmetics.domain.goods.service.GoodsService;
 import com.fasterxml.jackson.databind.ObjectMapper;
@@ -81,8 +81,8 @@
     @Test
     @DisplayName("삭제할 상품번호가 존재하지 않습니다_IllegalArgumentExceptionHandler 테스트 ")
     public void illegalGoodsTest() throws Exception {
-        String goodsNo = "2024050100001";
-        given(goodsService.deleteGoods(goodsNo)).willThrow(new IllegalArgumentException("존재하지 않는 상품입니다"));
+        Long goodsNo = 1L;
+        given(goodsService.deleteByGoodsNo(goodsNo)).willThrow(new IllegalArgumentException("존재하지 않는 상품입니다"));
 
         mockMvc.perform(MockMvcRequestBuilders.delete("http://localhost:8080/v1/goods/{goodsNo}", goodsNo))
                 .andDo(print())
Index: module-domain/src/test/java/com/cosmetics/goods/service/GoodsServiceTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/module-domain/src/test/java/com/cosmetics/goods/service/GoodsServiceTest.java b/module-domain/src/test/java/com/cosmetics/goods/service/GoodsServiceTest.java
--- a/module-domain/src/test/java/com/cosmetics/goods/service/GoodsServiceTest.java	
+++ b/module-domain/src/test/java/com/cosmetics/goods/service/GoodsServiceTest.java	
@@ -1,9 +1,9 @@
 package com.cosmetics.goods.service;
 
-import com.cosmetics.domain.goods.dto.GoodsItemManagement;
+import com.cosmetics.domain.goods.dto.item.GoodsItemManagement;
 import com.cosmetics.domain.goods.dto.GoodsManagement;
-import com.cosmetics.domain.goods.repository.GoodsRepository;
-import com.cosmetics.domain.goods.service.impl.GoodsServiceImpl;
+import com.cosmetics.domain.goods.repository.GoodsRepositoryOri;
+import com.cosmetics.domain.goods.service.GoodsService;
 import org.junit.jupiter.api.DisplayName;
 import org.junit.jupiter.api.Test;
 import org.junit.jupiter.api.extension.ExtendWith;
@@ -32,10 +32,10 @@
 @ExtendWith(MockitoExtension.class)
 public class GoodsServiceTest {
     @InjectMocks
-    private GoodsServiceImpl goodsService;
+    private GoodsService goodsService;
 
     @Mock
-    private GoodsRepository goodsRepository;
+    private GoodsRepositoryOri goodsRepositoryOri;
 
     @Test
     @DisplayName("상품등록")
@@ -46,12 +46,12 @@
         GoodsManagement responseGoods = responseGoods();
 
         //어떤 상품이어도 responseGoods가 반환되어야한다. 근데 any에 왜 requestGoods를 넣으면 오류가 나는지 이해가 안간다.ㅠ
-        doReturn(responseGoods).when(goodsRepository).save(any(GoodsManagement.class));
+        doReturn(responseGoods).when(goodsRepositoryOri).save(any(GoodsManagement.class));
 
         //when
-        GoodsManagement resultGoods = goodsService.save(requestGoods);
+     //   GoodsManagement resultGoods = goodsService.save(GoodsManagement.toDto(requestGoods.toEntity()));
 
-        assertThat(resultGoods.getGoodsNo()).isEqualTo("2024050100001");
+       // assertThat(resultGoods.getGoodsNo()).isEqualTo("2024050100001");
     }
 
     @Test
@@ -61,10 +61,10 @@
         //given
         GoodsManagement responseGoods = responseGoods();
 
-        doReturn(responseGoods).when(goodsRepository).findGoods(any(String.class));
+        doReturn(responseGoods).when(goodsRepositoryOri).findGoods(any(String.class));
 
         //when
-        GoodsManagement resultGoods = goodsRepository.findGoods("2024050100001");
+        GoodsManagement resultGoods = goodsRepositoryOri.findGoods("2024050100001");
 
         assertThat(resultGoods.getGoodsNo()).isEqualTo("2024050100001");
         assertThat(resultGoods.getGoodsNm()).isEqualTo("닥터스킨");
@@ -88,7 +88,7 @@
                 .marketPrice(15000)
                 .salePrice(12000)
                 .supplyPrice(10000)
-                .vendorId("lv202400002")
+                .vendorId(1L)
                 .stockQty(80)
                 .brandNm("닥터펫")
                 .saleStartDtime("2024-05-01 00:00:00")
@@ -117,7 +117,7 @@
                 .marketPrice(15000)
                 .salePrice(12000)
                 .supplyPrice(10000)
-                .vendorId("lv202400002")
+                .vendorId(1L)
                 .stockQty(80)
                 .brandNm("닥터펫")
                 .saleStartDtime("2024-05-01 00:00:00")
Index: module-domain/src/main/java/com/cosmetics/domain/member/service/impl/MemberService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/module-domain/src/main/java/com/cosmetics/domain/member/service/impl/MemberService.java b/module-domain/src/main/java/com/cosmetics/domain/member/service/impl/MemberService.java
--- a/module-domain/src/main/java/com/cosmetics/domain/member/service/impl/MemberService.java	
+++ b/module-domain/src/main/java/com/cosmetics/domain/member/service/impl/MemberService.java	
@@ -6,6 +6,7 @@
 import com.cosmetics.domain.member.dto.MemberManagementResponse;
 import com.cosmetics.domain.member.entity.MemberManagementEntity;
 import com.cosmetics.domain.member.repository.MemberRepository;
+import jakarta.transaction.Transactional;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.dao.EmptyResultDataAccessException;
@@ -22,17 +23,18 @@
         this.memberRepository = memberRepository;
     }
 
+    @Transactional
     public MemberManagementResponse findMember(Long memberId) {
-        MemberManagementEntity saveEntity =  memberRepository.findByMemberId(memberId);
+        MemberManagementEntity saveEntity =  memberRepository.findByMemberId(memberId).orElseThrow(() -> new IllegalArgumentException("회원이 존재하지 않습니다."));
 
-        if(saveEntity == null) {
-            throw new IllegalArgumentException("회원이 존재하지 않습니다.");
-        }
+        //entity -> dto
         MemberManagement memberManagement = MemberManagement.toDto(saveEntity);
 
+        //dto -> response
         return MemberManagementResponse.toResponse(memberManagement);
     }
 
+    @Transactional
     public MemberManagementResponse save(MemberManagement memberManagement) {
         //save
         MemberManagementEntity saveEntity =  memberRepository.save(memberManagement.toEntity());
@@ -51,6 +53,7 @@
         return response;
     }
 
+    @Transactional
     public void deleteMember(Long memberId) {
         try {
             memberRepository.deleteByMemberId(memberId);
Index: module-domain/src/test/java/com/cosmetics/goods/repository/GoodsRepositoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/module-domain/src/test/java/com/cosmetics/goods/repository/GoodsRepositoryTest.java b/module-domain/src/test/java/com/cosmetics/goods/repository/GoodsRepositoryTest.java
--- a/module-domain/src/test/java/com/cosmetics/goods/repository/GoodsRepositoryTest.java	
+++ b/module-domain/src/test/java/com/cosmetics/goods/repository/GoodsRepositoryTest.java	
@@ -1,8 +1,8 @@
 package com.cosmetics.goods.repository;
 
-import com.cosmetics.domain.goods.dto.GoodsItemManagement;
+import com.cosmetics.domain.goods.dto.item.GoodsItemManagement;
 import com.cosmetics.domain.goods.dto.GoodsManagement;
-import com.cosmetics.domain.goods.repository.GoodsRepository;
+import com.cosmetics.domain.goods.repository.GoodsRepositoryOri;
 import com.fasterxml.jackson.databind.ObjectMapper;
 import org.junit.jupiter.api.Test;
 import org.junit.jupiter.api.extension.ExtendWith;
@@ -21,7 +21,7 @@
 public class GoodsRepositoryTest {
 
     @InjectMocks
-    private GoodsRepository goodsRepository;
+    private GoodsRepositoryOri goodsRepositoryOri;
 
     @Test
     public void 상품등록() throws Exception {
@@ -29,7 +29,7 @@
         GoodsManagement goodsManagement = requestGoods();
 
         //when
-        goodsRepository.save(goodsManagement);
+        goodsRepositoryOri.save(goodsManagement);
 
         System.out.println(new ObjectMapper().writeValueAsString(goodsManagement));
         //then
@@ -40,7 +40,7 @@
     @Test
     public void 상품조회() throws Exception {
         상품등록();
-        GoodsManagement goodsManagement = goodsRepository.findGoods("240501100001");
+        GoodsManagement goodsManagement = goodsRepositoryOri.findGoods("240501100001");
         assertNotNull(goodsManagement.getGoodsNm());
     }
 
Index: module-api/src/test/java/com/cosmetics/goods/controller/GoodsExceptionTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/module-api/src/test/java/com/cosmetics/goods/controller/GoodsExceptionTest.java b/module-api/src/test/java/com/cosmetics/goods/controller/GoodsExceptionTest.java
--- a/module-api/src/test/java/com/cosmetics/goods/controller/GoodsExceptionTest.java	
+++ b/module-api/src/test/java/com/cosmetics/goods/controller/GoodsExceptionTest.java	
@@ -1,8 +1,8 @@
 package com.cosmetics.goods.controller;
 
-import com.cosmetics.domain.goods.dto.GoodsItemManagement;
+import com.cosmetics.domain.goods.dto.item.GoodsItemManagement;
 import com.cosmetics.domain.goods.dto.GoodsManagement;
-import com.cosmetics.domain.goods.repository.GoodsRepository;
+import com.cosmetics.domain.goods.repository.GoodsRepositoryOri;
 import com.cosmetics.domain.goods.service.GoodsService;
 import com.fasterxml.jackson.databind.ObjectMapper;
 import org.junit.jupiter.api.DisplayName;
@@ -41,14 +41,14 @@
     private MockMvc mockMvc;
 
     @MockBean
-    private GoodsRepository goodsRepository;
+    private GoodsRepositoryOri goodsRepositoryOri;
 
     @Test
     @DisplayName("상품등록 시 내부오류로 상품등록이 실패했을 경우_커스텀 예외_CustomExceptionHandler 테스트")
     public void saveGoodsFailErrorTest() throws Exception {
         GoodsManagement goodsManagement = requestGoods();
 
-        doReturn(null).when(goodsRepository).save(any(GoodsManagement.class));
+        doReturn(null).when(goodsRepositoryOri).save(any(GoodsManagement.class));
 // Body = {"resultCode":"0000","resultMsg":"등록성공","goodsNo":"240501100001","category":"스킨케어","goodsNm":"닥터스킨","salePrice":12000,"marketPrice":15000,"supplyPrice":10000,"vendorId":"lv202400002","stockQty":80,"brandNm":"닥터펫","saleStartDtime":"2024-05-01 00:00:00","saleEndDtime":"2024-08-01 00:00:00","item":[{"itemNo":null,"itemNm":"건성용","itemQty":50},{"itemNo":null,"itemNm":"지성용","itemQty":30}],"image":"https://cdn.localhost:8081/images/lv202400002/goods/image_1.png","addImage":"https://cdn.localhost:8081/images/lv202400002/goods/image_2.png"}
 
         mockMvc.perform(
Index: module-api/src/test/java/com/cosmetics/goods/GoodsApiApplicationTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/module-api/src/test/java/com/cosmetics/goods/GoodsApiApplicationTest.java b/module-api/src/test/java/com/cosmetics/goods/GoodsApiApplicationTest.java
--- a/module-api/src/test/java/com/cosmetics/goods/GoodsApiApplicationTest.java	
+++ b/module-api/src/test/java/com/cosmetics/goods/GoodsApiApplicationTest.java	
@@ -1,6 +1,6 @@
 package com.cosmetics.goods;
 
-import com.cosmetics.domain.goods.dto.GoodsItemManagement;
+import com.cosmetics.domain.goods.dto.item.GoodsItemManagement;
 import com.cosmetics.domain.goods.dto.GoodsManagement;
 import lombok.extern.slf4j.Slf4j;
 import org.junit.jupiter.api.*;
Index: docker/docker-compose.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/docker/docker-compose.yml b/docker/docker-compose.yml
--- a/docker/docker-compose.yml	
+++ b/docker/docker-compose.yml	
@@ -15,5 +15,6 @@
       MYSQL_DATABASE: mysqldb
       MYSQL_USER : dev_1234
       MYSQL_PASSWORD : 1234
+      TZ: Asia/Seoul
 volumes:
   mysql:
Index: module-domain/src/main/java/com/cosmetics/domain/vendor/service/impl/VendorServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/module-domain/src/main/java/com/cosmetics/domain/vendor/service/impl/VendorServiceImpl.java b/module-domain/src/main/java/com/cosmetics/domain/vendor/service/impl/VendorServiceImpl.java
--- a/module-domain/src/main/java/com/cosmetics/domain/vendor/service/impl/VendorServiceImpl.java	
+++ b/module-domain/src/main/java/com/cosmetics/domain/vendor/service/impl/VendorServiceImpl.java	
@@ -22,7 +22,7 @@
         VendorManagement resultGoodsMgmt = vendorRepository.save(vendorManagement);
 
         if (resultGoodsMgmt.getVendorId() != null) {
-            resultGoodsMgmt.updateSuccess("0000", "등록성공");
+         //   resultGoodsMgmt.updateSuccess("0000", "등록성공");
         } else {
             throw new CustomException(VendorErrorManagement.VENDOR_ERROR_MANAGEMENT);
         }
